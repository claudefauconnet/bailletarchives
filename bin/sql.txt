select metrageStr, CAST(Replace(metrageStr,",",".") AS DECIMAL(10,3)) from versement

update versement set metrage=CAST(Replace(metrageStr,",",".") AS DECIMAL(10,3)) 

update  versement set  metrage=CAST(Replace(metrageStr,",",".") AS DECIMAL(10,2)) where metrageStr is not null

set sql_mode=""
select dateArriveeStr,str_to_date(dateArriveeStr,"%d/%c/%Y") from versement


update versement v  LEFT OUTER JOIN versement  magasin m ON v.numVersement=m.numVersement set v.numVersement= m.numVersement 

select versement.numVersement, magasin.numVersement from versement , magasin where magasin.numVersement=versement.numVersement

update  versement set dateArrivee=str_to_date(dateArriveeStr,"%Y/%c/%d")

select numVersement,CONCAT("0 ",numVersement) from versement where CHAR_LENGTH(numVersement)=3


update versement v  JOIN  magasin m ON v.numVersement=m.numVersement set v.etatTraitement= m.etatTraitement 







UPDATE magasin
        INNER JOIN
    versement ON magasin.numversement = versement.numVersement
SET
    magasin.id_versement = versement.id

UPDATE v SET v.Status = 'old' FROM versement v INNER JOIN magasin n ON v.numVersement = m.numVersement

UPDATE v SET v.etatVersement = m.nouveau FROM versement v INNER JOIN etatversement m ON v.etatVersement = m.ancien

ALTER TABLE versement Add id smallint(10) AUTO_INCREMENT;



udpate table r_versement_magasin set date = current_date()

select v.id,m.id from versement v, magasin m where m.numVersement=v.numVersement




ALTER TABLE versement ADD COLUMN nature VARCHAR(50) AFTER numVersement;
ALTER TABLE versement DROP COLUMN nbBoitesStr;


update versement set nature="analogique"  where (versement.cotesExtremesBoites!="" or  versement.cotesExtremesBoites is not  null) and (volumeGO=0 and versement.nbreElements=0)
update versement set nature="numerique"  where (versement.cotesExtremesBoites="" or  versement.cotesExtremesBoites is   null) and (volumeGO>0 and versement.nbreElements>0)
update versement set nature="hybride"  where (versement.cotesExtremesBoites!="" and versement.cotesExtremesBoites is  not null) and (volumeGO>0 and versement.nbreElements>0)
update versement set nature=null where (versement.cotesExtremesBoites="" or versement.cotesExtremesBoites is   null) and (volumeGO=0 and versement.nbreElements=0)

************************************stats *******************************************

select YEAR(dateArrivee) as annee,etatTraitement,sum(nbBoites) nbreBoites,sum(metrage)totalMetrage, count(*) as nbreVersements, sum(volumeGO) as volumeTotalGO,sum(nbreElements) nbreTotalElements from versement group by annee,etatTraitement
select etatTraitement,sum(volumeGO),sum(nbreElements) from versement group by etatTraitement

 update magasin set tablette =SUBSTRING_INDEX(magasin.coordonnees,'-',4)
 
 select count(distinct numVersement) from magasin where  numVersement in (select numVersement from magasin group by numVersement having count(distinct magasin) >1)
 
 
 ****** changement modele dec2018 (id versement 1-n versement-> magasin)

 update magasin m JOIN versement v ON v.numVersement=m.numVersement set m.id_versement=v.id

 suppimer commentaires  dans magasin
 select versement.numVersement,magasin.coordonnees,versement.commentaires, magasin.commentaires  from versement, magasin where versement.commentaires= magasin.commentaires and versement.commentaires is not null and versement.commentaires!=''


**********************************changement modele historique versement*************************

insert into versement_historique (id_versement,etat,etatDate,etatAuteur)
SELECT v.id,"décrit" , v.dateArrivee,v.deposePar FROM versment_old v

insert into versement_historique (id_versement,etat,etatDate,etatAuteur)
SELECT v.id,"entré" , v.dateArrivee,v.deposePar FROM versment_old v


update magasin set indisponible=1 where commentaires like '%auchar%'
insert into tablette_occupee (coordonnees,id_magasin,typeOccupation,commentaire) select coordonnees,id,"stock",commentaires  from magasin where commentaires like '%auchar%'


ALTER TABLE `versement`
	ADD COLUMN `auteurVersement` VARCHAR(50) NULL DEFAULT NULL AFTER `commentaires`,
	ADD COLUMN `dateVersement` DATE NULL DEFAULT NULL AFTER `auteurVersement`;





	update   magasin  set indisponible=1 where ( id_versement is not null )  and (cotesParTablette is null or cotesParTablette='');




	**************************************Juin 2020 tables items***********************************



CREATE TABLE `espace_occupe` (
	`libelle` TEXT NULL DEFAULT NULL,
	`centreArchive` VARCHAR(50) NULL DEFAULT NULL,
	`nature` VARCHAR(50) NULL DEFAULT NULL,
	`cotesExtremesBoites` VARCHAR(100) NULL DEFAULT NULL,
	`cotesExtremesDossiersNiveauUn` VARCHAR(100) NULL DEFAULT NULL,
	`nbBoites` INT(11) NULL DEFAULT NULL,
	`metrage` DECIMAL(10,2) NULL DEFAULT NULL,
	`id` INT(11) NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

ALTER TABLE `magasin`
	ADD COLUMN `id_espace_occupe` INT NULL DEFAULT NULL AFTER `id_versement`,
	ADD INDEX `id_espace_occupe` (`id_espace_occupe`);






update magasin m JOIN importitemstablettes v ON v.coordonnees=m.coordonnees set m.id_espace_occupe=v.id_item

//Toutes les tablettes liées au versement 0000 doivent avoir un id_item 22, soit de la tablette B-05-03-6 à B-05-05-7

update magasin set id_espace_occupe=22 where numVersement="0000"


*************statisitiques items,
select magasin.magasin,items.nature,sum(magasin.DimTabletteMLineaire) from magasin,items where magasin.id_item=items.id group by magasin.magasin,items.nature



select magasin,count(magasin.coordonnees),sum(magasin.DimTabletteMLineaire) from magasin group by magasin

select count(magasin.coordonnees) as nbreTablettes,sum(versement.metrage) as versementMetrage,sum(magasin.DimTabletteMLineaire) as versementTotalLongTablettes from magasin,versement where magasin.id_versement=versement.id

select items.nature,count(magasin.coordonnees),sum(magasin.DimTabletteMLineaire) from magasin,items where magasin.id_item=items.id group by items.nature


rapport

select numVersement,intitule, metrage from versement order by metrage

UPDATE espace_occupe_x p
  JOIN ( SELECT q.id_espace_occupe
              , count(q.coordonnees) AS sum_attr
           FROM magasin q
          GROUP BY q.id_espace_occupe
       ) r
    ON r.id_espace_occupe = p.id
   SET p.nbreTablettes = r.sum_attr




   ALTER TABLE `magasin` ADD COLUMN `id_espace_occupe` INT(11) NULL DEFAULT NULL AFTER `id_versement`;



